## 학습목표
 * 반복문의 이해 및 활용 (while)
 
### loop (반복문)
 + 반복적인 작업을 가능하게 해주는 도구
 + 특정 조건을 만족하는 경우 수행할 수 있음 (while)
 + 리스트, 문자열, 튜플 등 컬렉션 타입의 아이템을 하나씩 순회하면서 사용 가능 (for)
 + 코드 작업에서, 가장 많이 사용하는 구문 중 하나
 + 주의할점: while을 사용할 경우, 반복을 멈추게 하는 장치가 필요
   + 그렇지 않으면 셀이 무한히 수행되며, jupyter notebook의 재부팅이 필요
   
#### while 키워드
  - while 뒤의 조건이 True일 경우, while 코드 블록을 계속 수행
  - while 코드 블록
    - if와 마찬가지로 while문 아래의 들여쓰기로 작성 된 부분을 의미
  - 조건이 False가 되면 블록 수행을 멈추고 이후 코드를 실행
  
#### while 키워드 이용하여 리스트의 아이템 출력하기

a = [1, 2, 9, 10]

i = 0 # 인덱스
while i < len(a):
    print('value:' , a[i], ',index: ', i)
    i += 1
    
= value: 1 ,index:  0
  value: 2 ,index:  1
  value: 9 ,index:  2
  value: 10 ,index:  3
  
a = [1, 2, 9, 10, 22, 24, 28]

i = 0 # 인덱스
while i < len(a):
    if a[i] > 20:
        print(a[i])
    i += 1
    
= 22
  24
  
#### 무한루프
 - while의 경우 종료가 되지 않도록 코드를 작성하면 블록에서 빠져나올 수 없음

while True:
    print('Hello')
    
#### break 
 + loop를 중단할 때 사용
 + 보통 조건문 안에서 수행되며, 조건을 만족하는 경우 loop를 탈출하기 위해 사용
 + loop를 중단 하는 경우, while 이후의 코드를 수행
 
a = [1, 10, 9, 24, 27, 28]

i = 0

while i < len(a):
    if a[i] >20:
        break
    
    print(a[i])
    i += 1
    
print('Hello')

= 1
  10
  9
  Hello
  
#### continue
 + break 처럼 반복을 중단하진 하여 빠져나오지 않고, 다시 while조건으로 점프함
 + 특정한 경우에는 코드를 수행하지 않고 다음으로 건너 뛰기 위해 사용

a = 10
while a > 0:
    a -= 1
    if a == 5:
        continue
    print(a)
    
= 9
  8
  7
  6
  4
  3
  2
  1
  0

### 1~ 100까지 합
 num = 1
_sum = 0
while num<= 100:
    _sum += num
    num += 1
    print(_sum, num)
    
print(_sum, num)

같은 입력값이 지만 print의 위치에 따라 값이 다름

위의값 =
1 2
3 3
6 4
10 5
15 6
21 7
28 8
36 9
45 10
55 11
66 12
78 13
91 14
105 15
120 16
136 17
153 18
171 19
190 20
210 21
231 22
253 23
276 24
300 25
325 26
351 27
378 28
406 29
435 30
465 31
496 32
528 33
561 34
595 35
630 36
666 37
703 38
741 39
780 40
820 41
861 42
903 43
946 44
990 45
1035 46
1081 47
1128 48
1176 49
1225 50
1275 51
1326 52
1378 53
1431 54
1485 55
1540 56
1596 57
1653 58
1711 59
1770 60
1830 61
1891 62
1953 63
2016 64
2080 65
2145 66
2211 67
2278 68
2346 69
2415 70
2485 71
2556 72
2628 73
2701 74
2775 75
2850 76
2926 77
3003 78
3081 79
3160 80
3240 81
3321 82
3403 83
3486 84
3570 85
3655 86
3741 87
3828 88
3916 89
4005 90
4095 91
4186 92
4278 93
4371 94
4465 95
4560 96
4656 97
4753 98
4851 99
4950 100
5050 101

아래값은 전부 더한값과 탈출한 값인 5050 101 만 출력 된다.
